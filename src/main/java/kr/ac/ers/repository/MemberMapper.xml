<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="kr.ac.ers.repository.MemberMapper">

	<sql id="search">	
		<if test="memType != null and memType != ''.toString() ">
			and memType=#{memType}			
		</if>
		<if test="gu != null and gu != ''.toString() ">
			and substr(address,7,9) like '%'||#{gu}||'%'		
		</if>
		<if test="dong != null and dong != ''.toString()">
			and substr(address,INSTR(address,' ',INSTR(address, ' '))+1,INSTR(address, ' ', 1, 2))	like '%'||#{dong}||'%'		
		</if>
		<if test="name != null and name != ''.toString()">
			and name like '%'||#{name}||'%'			
		</if>			
	</sql>	
	
	<select id="selectMemberList" resultType="MemberVO">
		select * from member
		where id is not null
		<include refid="search"/>
		
		order by regDate desc
	</select>
	
	<select id="selectSearchMemberListCount" resultType="Integer">
		select
		count(*) 
		from member
		where id is not null
		<include refid="search" />
		
	</select>
	
	
	<select id="selectMemberById" parameterType="String" resultType="MemberVO">
		select * from member
		where id=#{id}
	</select>
	
	
	<select id="selectMemberSequenceNextValue" resultType="String"> <!-- sequence 뽑아내서 등록 시, 사용? -->
		select member_seq.nextVal
		from dual
	</select>
	
	<insert id="insertMember" parameterType="MemberVO">
		insert into
		member(id, name, birth, address, phone, gender, picture,  caution, memType, lNum)
		values(#{id},#{name},#{birth},#{address},#{phone},#{gender},#{picture},#{caution},#{memType},#{lNum})
	</insert>
	
	<select id="selectAssignableLsupporter" resultType="LsupporterStatusVO">
		select m.name as m_name, f.name , f.birth, f.gender, l.wid
		from member m, fieldstaff f, lsupporter l
		where l.wcode=f.wcode and m.lnum=l.lnum and m.id=#{id}
	</select>
	
	
	<update id="updateLsupporter">
		update member
		set wid=#{wid}
		where id=#{id}
	</update>
	
	<select id="countMachineCk" resultType="Integer">
		select count(*)
		from machine
		where id = #{id}
	</select>
	
	<select id="selectLsupporterName" resultType="String">
		select f.name
		from fieldstaff f, lsupporter l, member m
		where f.wcode = l.wcode and m.wid = l.wid and m.id=#{id} 
	</select>
	
	
	<select id="selectMaxId" resultType="String">
		select max(id)
		from member 
	</select>

	<update id="updateMember" parameterType="MemberVO">
		update member
		set
		address=#{address},phone=#{phone},caution=#{caution},status=#{status},lNum=#{lNum}
		where id=#{id}
	</update>
	
</mapper>